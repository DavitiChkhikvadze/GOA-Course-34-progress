// 1) რა არის Node.js?
// Node.js არის JavaScript-ის runtime გარემო, რომელიც გაძლევს საშუალებას
// რომ JS კოდი გაუშვა არა ბრაუზერში, არამედ სერვერზე. 
// ის აგებულია Google-ის V8 engine-ზე და იყენებს event-driven, non-blocking I/O მოდელს,
// რაც მას ძალიან სწრაფს და ეფექტურს ხდის.

// 2) რა არის package.json-ში dependencies და devDependencies?
// - dependencies: ეს არის პაკეტები, რომლებიც საჭიროა აპლიკაციის მუშაობისთვის production-ში.
//   მაგ: express, mongoose.
// - devDependencies: ეს არის პაკეტები, რომლებიც საჭიროა მხოლოდ დეველოპმენტისას,
//   მაგ: nodemon, jest (ტესტირებისთვის).

// 3) რა არის npm?
// npm (Node Package Manager) არის პაკეტების მენეჯერი Node.js-ისთვის.
// მისი საშუალებით შეგიძლია დააინსტალირო, წაშალო და მართო პაკეტები (ბიბლიოთეკები).

// 4) რა არის მოდული?
// მოდული არის კოდის ნაწილი (ფაილი ან ბიბლიოთეკა), რომელიც შეგვიძლია გამოვიყენოთ სხვაგან.
// JS-ში ყოველი ფაილი ავტომატურად ითვლება მოდულად.
// მოდულები გვაძლევენ კოდის დაყოფის და გადამეორებით გამოყენების საშუალებას.

// 5) როგორ ვაექსპორტებთ და ვაიმპორტებთ მოდულებს?
// ექსპორტი (export):
// module.exports = myFunction;
// ან
// module.exports = { myFunc, myVar };
//
// იმპორტი (import):
// const myModule = require('./myModule'); // CommonJS სინტაქსი
// import myModule from './myModule.js';   // ES Modules (ESM) სინტაქსი

// 7) რა არის require vs modules (import/export)?
// require() არის CommonJS მოდულების იმპორტის მეთოდი (ძველი სტანდარტი Node.js-ში).
// import/export არის ES Modules (ESM) სტანდარტი, რომელიც ახალია და ახლანდელი Node.js უკვე უჭერს მხარს.
// ორივე გამოიყენება მოდულების დასამატებლად, უბრალოდ სინტაქსი და სტანდარტი განსხვავებულია.
